language: cpp

matrix:
  fast_finish: true
  include:
    ###### Linux
    ### GCC
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - gcc-9
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - gcc-8
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gcc-7
    ### Clang
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8
          packages:
            - clang-8
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7
    ###### OSX
    ### GCC
    - os: osx
      compiler: gcc
      osx_image: xcode9.4
    - os: osx
      compiler: gcc
      osx_image: xcode10
    - os: osx
      compiler: gcc
      osx_image: xcode11
    - os: osx
      compiler: gcc
      osx_image: xcode11.2
    ### Clang
    - os: osx
      compiler: clang
      osx_image: xcode9.4
    - os: osx
      compiler: clang
      osx_image: xcode10
    - os: osx
      compiler: clang
      osx_image: xcode11
    - os: osx
      compiler: clang
      osx_image: xcode11.2


install:
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then export CMAKE="cmake"; fi
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then export CTEST="ctest"; fi
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew update; fi
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew upgrade cmake -v; fi
  
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then export CMAKE="/opt/cmake/bin/cmake"; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then export CTEST="/opt/cmake/bin/ctest"; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo wget https://github.com/Kitware/CMake/releases/download/v3.16.0-rc3/cmake-3.16.0-rc3-Linux-x86_64.tar.gz; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo tar -xzf cmake-3.16.0-rc3-Linux-x86_64.tar.gz; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo mv cmake-3.16.0-rc3-Linux-x86_64 /opt/cmake; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then sudo ln -s /usr/local/clang-7.0.0/bin/* /usr/local/bin; fi

  - sudo $CMAKE --version 

  - export BUILD_TYPE=Release

  ## For example use googletest for testing
  ## Download googletest
  # 
  # - sudo wget https://github.com/google/googletest/archive/release-1.10.0.tar.gz
  # - sudo tar -xzf release-1.10.0.tar.gz
  # 
  # - export GTEST_DIR="$(pwd)/googletest-release-1.10.0"

before_script:
  ## Compile googletest
  # 
  # - cd "$GTEST_DIR"
  # - sudo mkdir build 
  # - cd build
  # 
  # - sudo $CMAKE .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX="$GTEST_DIR/install"
  # - sudo $CMAKE --build .
  # - sudo $CMAKE --install .

script:
  # Insert your own build script. Use $CMAKE & &CTEST instead of 'cmake' and 'ctest'

  # Compile target
  - cd "$TRAVIS_BUILD_DIR"
  - sudo mkdir build
  - cd build
  - sudo $CMAKE .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - sudo $CMAKE --build .

  # Testing
  - sudo $CTEST --verbose

notifications:
email:
  recipients:
    - email@example.com
  on_success: never
  on_failure: always